#!/bin/bash
# Do-now add-on for Todo.txt

# ====================================================
# Configuration
# ====================================================
DESKTOP_NOTIFICATION=true        # Requires libnotify (on Ubuntu based: sudo apt-get install libnotify-bin)
REMINDER_INTERVAL=10             # Intervals between desktop notifications
#EVIDENCE_LOG=$TODO_DIR/evidence.log


ITEM=false
if [ x"$1" = x"donow" ]; then
    [[ -z $2 ]] && echo "Error: Item number not found" && exit 0
    [ "$2" = "usage" ] && {
        echo
        echo "  Select an item and start counting the time you work on it"
        echo "  usage:"
        echo "      todo.sh donow #ITEM"
        echo
        exit
    }
    ITEM=$2
    shift
    shift
fi

# ====================================================
# Some global variables
# ====================================================
WORKED_TIME=0
ONE_MINUTE=${ONE_MINUTE-60}      # for tests reasons. Do not modify


# ====================================================
# Functions
# ====================================================

# Append a time-stamped (local time) entry to the $EVIDENCE_LOG.
# Create log file if it doesn't exist.
elog()
{
    if [ ! -z "${EVIDENCE_LOG}" ] && [ ! -f "${EVIDENCE_LOG}" ] ; then
        touch "${EVIDENCE_LOG}"
    fi
    if [ -f "${EVIDENCE_LOG}" ] ; then
        echo $(date "+%F %T") "$1" >> "${EVIDENCE_LOG}"
    fi
}

update_activity()
{
    if [[ ! $WORKED_TIME -eq 0 ]]; then
        echo
        if [[ $curr_time_worked = false ]]; then
            "$TODO_SH" command append $ITEM "min:$WORKED_TIME"
        else
            let "curr_time_worked = $curr_time_worked + $WORKED_TIME"
            # pruning priority from summary
            no_pri_summary=`echo $summary | sed -E "s_\([A-Z]+\) __g"`
            # updating minutes counter
            new_summary=`echo "$no_pri_summary" | sed -E "s/min:[0-9]+/min:$curr_time_worked/g"`
            "$TODO_SH" command replace $ITEM "$new_summary"
        fi
    fi
    elog "stop : ${SUMMARY}"
    exit 1
}

# Wrapper function to pop-up a notification using libnotify
signal()
{
    if [[ $DESKTOP_NOTIFICATION = true ]]; then
        if [ "$(uname)" == "Darwin" ]; then
            osascript -e "display notification \"$2\" with title \"$1\""
        else
            notify-send -u critical -i appointment-soon -t 300 "$1" "$2"
        fi
    fi
}

# Actual counter function
do_now()
{
    local SUMMARY="$1"
    local COUNTER=0
    local MILESTONE=$REMINDER_INTERVAL

    echo "Working on: ${SUMMARY} "
    elog "start: ${SUMMARY}"

    while true; do
        sleep $ONE_MINUTE

        let "COUNTER = $COUNTER + 1"
        WORKED_TIME=$COUNTER

        echo -en "\r["$SUMMARY"] $COUNTER minute(s) passed"

        if [ $COUNTER = $MILESTONE ]; then
            signal "${SUMMARY}" "$COUNTER minutes passed "
            let "MILESTONE = $MILESTONE + $MILESTONE"
        fi
    done
}


# ====================================================
# Main
# ====================================================


# get the right activity and its summary
counter=0
while read line
do
    let "counter = counter + 1"
    [ $counter = $ITEM ] && summary=$line
done < "$TODO_FILE"

[[ -z "$summary" ]] && echo "Could not find activity number $ITEM" && exit 0

# get the activity's current worked time (if any)
curr_time_worked=false
for token in $summary; do
    if [[ "$token" = min:* ]]; then
       curr_time_worked=`echo "$token" | cut -d':' -f 2`
    fi
done


trap 'update_activity' INT

# run new session (new worked time will be available in WORKED_TIME variable)
do_now "$summary"
